---
meta:
  name:     uaa
  target:   gk-plat-devs
  url:      https://ci.gstack.io
  team:     gk-plat-devs
  pipeline: (( concat "gk-" meta.name "-boshrelease" ))

  test-errands: ~

  initial_version: 74.29.1

  manifest:
    directory: manifests
    vars: |
      ---
      deployment_name: gk-uaa-testflight     # must match 'meta.bosh.deployment'
      network_name: default
    vars-pr: |
      ---
      deployment_name: gk-uaa-testflight-pr  # must match 'meta.bosh.deployment-pr'
      network_name: default

  git:
    email:  ((git-commit-email))
    name:   ((git-commit-name))

  image:
    name: harbor.ci.gstack.io/gstack/gk-ops
    registry:
      username: ((docker-registry-username))
      password: ((docker-registry-password))

  ruby-image:
    name: harbor.ci.gstack.io/library/ruby
    # NOTE: we don't use any slim image here, because we need 'make' and build
    # tools for 'bundle install' to properly compile and install the required
    # gems.
    tag:  "2.7.2"

  java-image:
    name: harbor.ci.gstack.io/library/openjdk
    tag:  11.0.9-slim

  aws:
    bucket:      (( grab meta.pipeline ))
    region_name: eu-west-3
    access_key:  "" # ((aws-access-key))
    secret_key:  "" # ((aws-secret-key))

  github:
    owner:  gstackio
    repo:   (( grab meta.pipeline ))
    branch: feature/github-oauth2

    private_key:  ((github-private-key))
    access_token: ((github-access-token))

  bosh:
    stemcell:
      cpi: warden-boshlite
    deployment:    (( concat "gk-" meta.name "-testflight" ))
    deployment-pr: (( concat "gk-" meta.name "-testflight-pr" ))

  slack:
    webhook:       ((slack-webhook))
    username:      ((slack-username))
    icon:          ((slack-icon-url))
    channel:       gstack-engineering
    blob_success:  '(( concat ": New version of  was detected, and updated in master. <" meta.url "/teams//pipelines/| Cut a new release?>" ))'
    blob_failure:  '(( concat ": :airplane_arriving: <" meta.url "/teams//pipelines//jobs//builds/| Failed to update the blob for >" ))'



groups:
  - name: (( grab meta.pipeline ))
    jobs:
      - (( prepend ))
      - pre-flight
      - pre-flight-java

jobs:
  - name: pre-flight
    public: true
    serial: true
    plan:
      - { get: git, trigger: true }
      - { get: ruby-image }
      - task: pre-flight-rake
        image: ruby-image
        config:
          platform: linux
          inputs:
            - name: git
          caches:
            - path: gem-home
          run:
            path: bash
            args:
              - -c
              - |
                set -ueo pipefail -x

                cached_gem_home=${PWD}/gem-home
                export GEM_PATH=${cached_gem_home}${GEM_HOME:+":${GEM_HOME}"}
                export GEM_HOME=${cached_gem_home}

                pushd "git" > /dev/null

                bundle install
                bundle exec rake
    on_failure:
      put: notify
      params:
        channel:  (( grab meta.slack.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.icon ))
        text:    '(( concat meta.slack.fail_url " " meta.pipeline ": pre-flight job failed" ))'

  - name: pre-flight-java
    public: true
    serial: true
    plan:
      - { get: git, trigger: true, passed: [ pre-flight ] }
      - { get: java-image }
      - task: pre-flight-java
        image: java-image
        config:
          platform: linux
          inputs:
            - name: git
          caches:
            - path: gradle-home
          run:
            path: bash
            args:
              - -c
              - |
                set -ueo pipefail -x

                export GRADLE_USER_HOME=${PWD}/gradle-home

                pushd "git/src/uaa" > /dev/null
                    ./gradlew build --build-cache --stacktrace
                    ./gradlew --stop
                popd  > /dev/null
    on_failure:
      put: notify
      params:
        channel:  (( grab meta.slack.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.icon ))
        text:    '(( concat meta.slack.fail_url " " meta.pipeline ": pre-flight-java job failed" ))'

  - name: testflight
    plan:
    - (( inline ))
    - # name: main
      do:
      - (( inline ))
      - { get: git, trigger: true, passed: [ pre-flight ] }
      - {}
      - # name: testflight
        config:
          params:
            # NOTE: this UAA_VERSION environment variable is required by the
            # 'pre_packaging' script of the 'uaa' package, in the 'uaa' BOSH
            # Release.
            UAA_VERSION: (( grab meta.initial_version )) # maybe 'latest' would work here?

  - name: testflight-pr
    plan:
    - (( inline ))
    - # name: main
      do:
      - (( inline ))
      - {} # get: git-pull-requests
      - {} # get: image
      - {} # name: pending-status
      - # name: testflight
        config:
          params:
            # NOTE: this UAA_VERSION environment variable is required by the
            # 'pre_packaging' script of the 'uaa' package, in the 'uaa' BOSH
            # Release.
            UAA_VERSION: (( grab meta.initial_version )) # maybe 'latest' would work here?

resources:
  - name: java-image
    type: docker-image
    source:
      repository: (( grab meta.java-image.name ))
      tag:        (( grab meta.java-image.tag ))
      username:   (( grab meta.image.registry.username ))
      password:   (( grab meta.image.registry.password ))

  - name: ruby-image
    type: docker-image
    source:
      repository: (( grab meta.ruby-image.name ))
      tag:        (( grab meta.ruby-image.tag ))
      username:   (( grab meta.image.registry.username ))
      password:   (( grab meta.image.registry.password ))

  - name: version
    source:
      bucket:            (( prune ))
      region_name:       (( prune ))
      key:               (( prune ))
      access_key_id:     (( prune ))
      secret_access_key: (( prune ))
      driver:      git
      uri:         git@github.com:gstackio/gk-pipelines-compass.git
      branch:      master
      file:        (( concat "versions/" meta.pipeline ))
      private_key: ((github-private-key))
      git_user:    "((git-commit-name)) <((git-commit-email))>"

  - name: git
    check_every: 24h
    webhook_token: ((concourse-webhook-token))

  - name: git-pull-requests
    check_every: 24h
    webhook_token: ((concourse-webhook-token))
